@model EasyCodeGenerator.TableModel
@@CodeFileNameFormat {0}Container_auto
@{ 
    //CodeFileNameFormat 文件名字指令的参数会以 ( TableName, TemplateName)的顺序传入,CodeFileNameFormat 命令以单行的方式进行设置,可以不设置CodeFileNameFormat指令

    string className = Model.Name + "Container";
    string baseName = Model.Name;
    string whereName = Model.Name + "Where";
}

//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by EasyCodeGenerator
//
//     Time:    @DateTime.Now.ToString()
//
//     这个文件是自动生成的文件,不要在这个文件里面写代码,会被覆盖
//</autogenerated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text;
using System.Linq;
using Hqew.DMSFrame.BLL;
using Hqew.DMSFrame.Entity.ExpressionClips;

@foreach (var item in Model.RelatedNamespace)
{
<text>using @item;
</text>
}

namespace  @Model.Namespace
{
    /// <summary>
    /// @className 容器
    /// </summary>
    public partial class @className : BaseContainer<@baseName>
    { 
        #region 公开属性

        #endregion
        #region 公开方法
    

        internal static int AddList(List<@(className)> input)
        {
            BaseBLL hqBuyBll2 = new BaseBLL();
            var v1 = input.Select(p => p.core).ToList();
            return hqBuyBll2.AddList(v1);
        }
    
        /// <summary>
        /// 删除条件数据 慎用!!
        /// </summary>
        internal int Delete(@(whereName)  Input)
        {
            WhereClip<@baseName> where =  Input.GetWhere();
            return this.hqBuyBll.Delete(where);
        }
    
        /// <summary>
        /// 查询数量
        /// </summary>
        internal int GetCount(@(whereName)  Input)
        {
            WhereClip<@baseName> where = Input.GetWhere();
            return this.hqBuyBll.GetCount(where);
        }
     

        /// <summary>
        /// 条件递增
        /// </summary>
        /// <param name="input"></param>
        internal int EditAppend(@(whereName) Input)
        {
            WhereClip<@baseName> where =  Input.GetWhere();

            return this.hqBuyBll.EditAppend(this.core, where);
        }

     
        /// <summary>
        /// 条件更新
        /// </summary>
        /// <param name="input"></param>
        internal int update(@(whereName) Input)
        {
            WhereClip<@baseName> where = Input.GetWhere();

            return this.hqBuyBll.Edit(this.core, where);
        }

     
    
        /// <summary>
        /// 查询集合
        /// </summary>
        /// <returns></returns>
        internal @className  GetOne(
            @whereName input 
           )
        {   
    
            var v1 = GetList(input
             , 1
             );
            if (v1.Count > 0)
            {
                return v1[0];
            }
            else
            {
                return null;
            }

     
        }
    
        /// <summary>
        /// 查询集合
        /// </summary>
        /// <returns></returns>
        internal List<@className> GetList(
            @whereName input
            , int TopN
           )
        {  
            ColumnsClip<@baseName> Column=AllColumn;
     
            return GetList(input
            ,TopN
            ,Column
            ); 
        }
    
        /// <summary>
        /// 查询集合
        /// </summary>
        /// <returns></returns>
        internal List<@className> GetList(
            @whereName Input
            , int TopN
            ,ColumnsClip<@baseName> Column
           )
        { 
            WhereClip<@baseName> where= Input.GetWhere();
     
            return GetList(
            TopN
            ,Column
            ,where
             ); 
        }
    
        /// <summary>
        /// 查询集合
        /// </summary>
        /// <returns></returns>
        internal List<@className> GetList(
            int TopN
            ,ColumnsClip<@baseName> Column
            ,WhereClip<@baseName> where)
        { 
             OrderByClip<@baseName> orderby1 = null;

             @if(Model.PrimaryKeyColumn != null) { 
            <text>
             orderby1 = new OrderByClip<@baseName>();
                orderby1.Append(o => o.OrderBy(o.@(Model.PrimaryKeyColumn.Name).Desc()));
            </text>
            }

            return GetList(
            TopN
            ,Column
            ,where
            ,orderby1); 
        }

        /// <summary>
        /// 查询集合
        /// </summary>
        /// <returns></returns>
        internal List<@className> GetList( 
            int TopN
            ,ColumnsClip<@baseName> Column
            ,WhereClip<@baseName> where
            ,OrderByClip<@baseName> orderby1
        )
        { 
      
            //查询
            List<@baseName> value
                = hqBuyBll.GetList(TopN, Column, where, orderby1);

            var value2 = @(className).listToList<@(className)>(value);
     
            return value2;
        }


        /// <summary>
        /// 添加数据到数据库,直接插入,不做判断,用作底层
        /// </summary>
        /// <returns></returns>
        internal int Add()
        {
    @{
        if (Model.IncrementColumn!=null)
        {
            <text> 
            core.ChangedMappingProperties.Remove(nameof(@(Model.Name).@(Model.IncrementColumn.Name)));
    </text>
        }
     }

            object o = hqBuyBll.Add(core, true);


            if (o == null)
            {
                return 0;
            }

            if (!int.TryParse(o.ToString(), out int id))
            {
                return 0;
            }
            @{
                if (Model.PrimaryKeyColumn!=null)
                {
                <text> 
                this.core.@(Model.PrimaryKeyColumn.Name) = id;
        </text>
                }
            }

            return id;

        }


        #endregion 
     
        #region 私有属性
    

        /// <summary>
        /// 私有全字段列
        /// </summary>
        private static ColumnsClip<@baseName> AllColumn = new ColumnsClip<@baseName>(p => p.Columns(
        @for (int i = 0; i < Model.Columns.Count; i++)
        {
            if (i>0)
            {
                <text>,</text>
            }
                <text>p.@(Model.Columns[i].Name) </text>
        }
        ));

        #endregion
        #region 私有方法
     
        #endregion 
    }
}
